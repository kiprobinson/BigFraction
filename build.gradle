buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.8.0"
  }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'

apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'io.codearte.nexus-staging'
apply plugin: 'eclipse'

//jacoco: code coverage tool. Binary file is always generated (build/jacoco/*.exec).
//To generate HTML report, run:  gradle jacoco
apply plugin: 'jacoco'
    
sourceCompatibility=1.8
targetCompatibility=1.8

group = "com.github.kiprobinson"
archivesBaseName = "bigfraction"
version = "1.1.0"

//Project classifier will be null on master, 'java6' or 'java7' on branch.
//Keeping as a separate var to avoid a merge conflict on every new version released.
def projectClassifier = null
if(projectClassifier != null)
  version += '-' + projectClassifier

//Use the maven repo...
repositories {
  mavenLocal()
  mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
  testCompile 'junit:junit:4.12'
}

javadoc {
  source = sourceSets.main.allJava
  options {
    links 'http://docs.oracle.com/javase/8/docs/api/'
  }
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar
  archives javadocJar
}


signing {
  sign configurations.archives
}

//NOTE TO SELF: following properties come from gitignore'd gradle.properties file:
// signing.keyId
// signing.password
// signing.secretKeyRingFile
// ossrhUsername
// ossrhPassword
//
// Another note to self-  release process:
// 1.  gradlew clean build uploadArchives
//   ... wait a minute or two ...
// 2.  gradlew closeRepository
//   ... wait a minute or two ...
// 3.  gradlew releaseRepository
uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
      
      /*
      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }
      
      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }*/
      
      pom.project {
        name 'Big Fraction'
        packaging 'jar'
        artifactId 'bigfraction'
        description 'Java library to represent arbitrary-precision fraction as a ratio of two BigIntegers.'
        url 'https://github.com/kiprobinson/BigFraction'
        
        scm {
          connection 'scm:git:git://github.com/kiprobinson/BigFraction.git'
          developerConnection 'scm:git:ssh://github.com/kiprobinson/BigFraction.git'
          url 'https://github.com/kiprobinson/BigFraction/tree/master'
        }
        
        licenses {
          license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }
        
        developers {
          developer {
            id 'kiprobinson'
            name 'Kip Robinson'
            email 'kip.robinson@gmail.com'
          }
        }
      }
    }
  }
}

/*
nexusStaging {
  packageGroup = 'com.github.kiprobinson'
  stagingProfileId = '5ff5b050a01221'
  username = ossrhUsername
  password = ossrhPassword
  //numberOfRetries = 3
}*/

jacoco {
  toolVersion = "0.7.+"
}

jacocoTestReport {
  dependsOn test
  reports {
    xml.enabled false
    csv.enabled false
    html.destination "${buildDir}/reports/jacoco"
  }
}

